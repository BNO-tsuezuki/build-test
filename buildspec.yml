version: 0.2

env:
  variables:
    dst: /tmp
phases:
  install:
    commands:
      - apt update
      - apt install -y python-pip
      - pip install awscli
  pre_build:
    commands:
      - echo $CODEBUILD_SOURCE_VERSION
      - echo $CODEBUILD_SRC_DIR
      - mkdir -p /$CODEBUILD_SOURCE_VERSION
      - mkdir -p $dst/evoapi
      - aws s3 cp s3://$bucket_name/DeliveryData.json $dst/evoapi/
      - aws s3 cp s3://$bucket_name/KvsConnections.json $dst/evoapi/
      - aws s3 cp s3://$bucket_name/MatchingServer.json $dst/evoapi/
      - aws s3 cp s3://$bucket_name/RdbConnections.json $dst/evoapi/
      - aws s3 cp s3://$bucket_name/SequencingServer.json $dst/evoapi/
      - aws s3 cp s3://$bucket_name/ToolServer.json $dst/evoapi/
      - aws s3 cp s3://$bucket_name/systeminfo.json $dst/evoapi/
      - cp $CODEBUILD_SRC_DIR/outgame/appsettings.DevEnv.json $dst/evoapi/
      - cp $CODEBUILD_SRC_DIR/outgame/appsettings.json $dst/evoapi/
      - cp $CODEBUILD_SRC_DIR/environment/codedeploy/appspec/evoapi.appspec.yml $dst/evoapi/appspec.yml
      - cp $CODEBUILD_SRC_DIR/environment/codedeploy/service/evoapi.service $dst/evoapi/
      - cp -r $CODEBUILD_SRC_DIR/environment/codedeploy/scripts $dst/evoapi/
      - cp $CODEBUILD_SRC_DIR/outgame/AuthenticationServer.json  $dst/evoapi/
  build:
    commands:
      - cd $CODEBUILD_SRC_DIR/outgame/evoapi
      - dotnet publish -c Debug -o $dst/evoapi/evoapi
      - tar czvf $CODEBUILD_SOURCE_VERSION/evoapi.tar.gz -C $dst/evoapi .
artifacts:
  files:
    - $CODEBUILD_SOURCE_VERSION/evoapi.tar.gz
