// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using evolib.Databases.common3;

namespace evolib.Migrations.common3dbcontext
{
    [DbContext(typeof(Common3DBContext))]
    [Migration("20200322003756_FirstStep")]
    partial class FirstStep
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("evolib.Databases.common3.MatchMember", b =>
                {
                    b.Property<string>("matchId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(64);

                    b.Property<string>("playersInfo");

                    b.HasKey("matchId");

                    b.ToTable("MatchMember");
                });

            modelBuilder.Entity("evolib.Databases.common3.ReplayInfoAllMatch", b =>
                {
                    b.Property<int>("replayVersion");

                    b.Property<DateTime>("date");

                    b.Property<string>("matchId")
                        .HasMaxLength(64);

                    b.Property<int>("gameMode");

                    b.Property<string>("mapId")
                        .HasMaxLength(16);

                    b.Property<int>("matchType");

                    b.Property<int>("mvpUnitId");

                    b.Property<string>("mvpUserName")
                        .HasMaxLength(32);

                    b.Property<string>("result")
                        .HasMaxLength(16);

                    b.Property<int>("totalTime");

                    b.HasKey("replayVersion", "date", "matchId");

                    b.ToTable("ReplayInfoAllMatch");
                });

            modelBuilder.Entity("evolib.Databases.common3.ReplayInfoRankMatch", b =>
                {
                    b.Property<int>("replayVersion");

                    b.Property<DateTime>("date");

                    b.Property<string>("matchId")
                        .HasMaxLength(64);

                    b.Property<byte[]>("awardUnits")
                        .HasMaxLength(64);

                    b.Property<int>("gameMode");

                    b.Property<bool>("isFeatured");

                    b.Property<string>("mapId")
                        .HasMaxLength(16);

                    b.Property<int>("mvpUnitId");

                    b.Property<int>("ratingAverage");

                    b.Property<byte[]>("spawnUnits")
                        .HasMaxLength(64);

                    b.HasKey("replayVersion", "date", "matchId");

                    b.ToTable("ReplayInfoRankMatch");
                });

            modelBuilder.Entity("evolib.Databases.common3.ReplayViewNum", b =>
                {
                    b.Property<string>("matchId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(64);

                    b.Property<int>("ViewNum");

                    b.HasKey("matchId");

                    b.ToTable("ReplayViewNum");
                });
#pragma warning restore 612, 618
        }
    }
}
